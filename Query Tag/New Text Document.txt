/*

CREATE PROCEDURE SelectTagpath @path_name varchar(max),
								@start_time varchar(100),
								@end_time varchar(100)
*/


DECLARE @start_time varchar(100),
		@start bigint;
SET @start_time = '2019-11-25';
SET @start = DATEDIFF_BIG(ms, '1970-01-01', @start_time);

DECLARE @end_time varchar(100),
		@end bigint;
SET @end_time = '2019-11-26';
SET @end = DATEDIFF_BIG(ms, '1970-01-01',  @end_time);

DECLARE @path_name varchar(max);
SET @path_name = 'cm1/roller press/roller_drive_pres';

DECLARE @partitions CURSOR;
SET @partitions = CURSOR FOR (Select distinct pname from 
	         (Select distinct scid from [EC_DB].[dbo].[sqlth_te] where tagpath = @path_name) te
	INNER JOIN [EC_DB].[dbo].[sqlth_scinfo] as scinfo ON te.scid = scinfo.id
	INNER JOIN [EC_DB].[dbo].[sqlth_drv] as drv on scinfo.drvid = drv.id
	INNER JOIN [EC_DB].[dbo].[sqlth_partitions] as partitions_table on drv.id -1 = partitions_table.drvid					
					where start_time >= DATEDIFF_BIG(ms, '1970-01-01', format(convert(datetime, @start_time), 'yyyy-MM-01'))-25200000
					and end_time <= DATEDIFF_BIG(ms, '1970-01-01', dateadd(month, 1, format(convert(datetime, @end_time), 'yyyy-MM-01')))-25200000)

--DECLARE @tags CURSOR;
--SET @tags = CURSOR FOR (SELECT id FROM [EC_DB].[dbo].[sqlth_te] where tagpath IN (@path_name);

-- Declare Temporary Table (Structure same as the partitions) 
DECLARE @return_table TABLE (
	[tagid] int,
	[intvalue] bigint,
	[floatvalue] float,
	[stringvalue] [varchar](255),
	[datevalue] [datetime] ,
	[dataintegrity] [int] ,
	[t_stamp] [bigint])

DECLARE @temp_partition varchar(255);
OPEN @partitions;
	FETCH NEXT FROM @partitions INTO @temp_partition
	WHILE @@FETCH_STATUS = 0
		BEGIN
			insert @return_table
			exec ('select * from [EC_DB].[dbo].' + @temp_partition + ' where tagid in (select id FROM [EC_DB].[dbo].[sqlth_te] where tagpath = ''' + @path_name + ''') and t_stamp BETWEEN ' + @start + ' and ' + @end +';')
			FETCH NEXT FROM @partitions INTO @temp_partition
		END

SELECT * from @return_table order by t_stamp DESC

--GO;